GAMS 50.4.0  c55df396 Aug 12, 2025          WEX-WEI x86 64bit/MS Windows - 08/26/25 02:51:37 Page 1
A Model for scheduling QCs
C o m p i l a t i o n


   3   
   4  scalars
   5      a1 "Weight for the makespan" /1/
   6      a2 "Weight for the total completion time" /1/
   7      M /1e+14/
   8  ;
   9   
  10  Sets
  11      i "index of tasks" /0*20/
  12      dummy "final position index" /'0',T/
  13      k "index of QCs" /1*4/
  14   
  15      psi(i,i) "set of pairs (i,j) that can't performed simultaneously" / 1.(2*15),
  16                                                                          2.(3*15),
  17                                                                          3.(4*15)
  18                                                                          4.(5*15),
  19                                                                          5.(6*15),
  20                                                                          6.(7*15),
  21                                                                          7.(8*15),
  22                                                                          8.(9*15),
  23                                                                          9.(10*15),
  24                                                                          10.(11*15),
  25                                                                          11.(12*15)
  26                                                                          12.(14*15),
  27                                                                          13.(14*15),
  28                                                                          14.15/
  29      phi(i,i) "precedence relation of two tasks" /12.13/
  30      YS(*) "set of QC locations" /1*20/
  31   
  32  ;
  33   
  34  alias(i,j);
  35  alias(v,k);
  36  alias(u,i);
  37   
  38  Parameters
  39      p(i)
  40      r(k)
  41      l(i) "location of task i" / 1 1,
  42                                  2 2,
  43                                  3 4,
  44                                  4 4,
  45                                  5 6,
  46                                  6 11,
  47                                  7 12,
  48                                  8 13,
  49                                  9 14,
  50                                  10 15,
  51                                  11 16,
  52                                  12 18,
  53                                  13 18,
  54                                  14 19,
  55                                  15 20 /
  56   
  57      l0(k) "starting location of QC k" /1 1, 2 3, 3 5, 4 7/
  58      lT(k) "final position of QC k" /1 1, 2 3, 3 5, 4 7/ !!I just assusmed that QCs return to their initial position after their last jobs
  59      t(i,j) "Travel time of a QC from locationn li of task i to location lj of task j."
  60      t_d(dummy,i,k)
  61  ;
  62   
  63  t(i,j) = abs(l(i)-l(j));
  64  p(i) = uniform(60,90);
  65  r(k) = 0;
  66  t_d('T',i,k) =abs(l(i) - lt(k));
  67  t_d('0',i,k) = abs(l(i) - l0(k));
  68   
  69  Binary Variables
  70      X(i,j,k)    "1, if QC k performs task j IMMeDIATELY after performing i"
  71      Z(i,j)      "1, if task j starts later than the completion time of task i;"
  72      X_d(dummy, i ,k)
  73  ;
  74   
  75  Positive Variables
  76      Y(k) "completion time of QC k"
  77      D(i) "completion time of task i"
  78      W "time at which all tasks are completed"
  79  ;
  80  variable objFunc;
  81   
  82  Equations
  83      obj, c1(k), c2(k)
  84      ,c3(k)
  85      ,c4(j)
  86      ,c5(i,k)
  87      ,c6(i,j,k)
  88      ,c7(i,j)
  89      ,c8(i,j)
  90      ,c9(i,j)
  91      ,c10(i,j,k)
  92      ,c11(j,k)
  93      ,c12(j,k)
  94  ;
  95   
  96  obj.. objFunc =e= a1*W + a2*sum(k,Y(k));
  97   
  98  c1(k).. Y(k) =l= W;
  99   
 100  c2(k).. sum(j,x_d('0',j,k)) =e=1;
 101   
 102  c3(k).. sum(i,x_d('T',i,k)) =e= 1;
 103   
 104  c4(j).. sum((k,i)$(j.val <> i.val), x(i,j,k))  =e= 1;
 105   
 106  c5(i,k).. sum(j $(j.val <> i.val),x(i,j,k)) - sum(j$(j.val <> i.val),x(j,i,k)) =e= 0;
 107   
 108  c6(i,j,k).. D(i) + t(i,j) + p(j) - D(j) $(j.val <> i.val) =l= M*(1- x(i,j,k));
 109   
 110  c7(i,j)..D(i) + p(j) $(phi(i,j) and (j.val <> i.val))  =l= D(j);
 111   
 112  c8(i,j).. D(i) - D(j) + p(j)$(j.val <> i.val)  =l= M*(1-z(i,j));
 113   
 114  c9(i,j).. Z(i,j) + z(j,i) $(psi(i,j)and (j.val <> i.val)) =e= 1;
 115   
 116  c10(i,j,k).. sum((v,u)$(v.val <= k.val), x(u,j,v)) -sum((v,u)$(v.val <= k.val), x(u,i,v)) $(j.val <> i.val and l(i)<l(j))  =l= M*(z(i,j) + z(j,i));
 117   
 118  c11(j,k).. D(j) + t_d('T',j,k) - Y(k) =l= M*(1 - x_d('T',j,k));
 119   
 120  c12(j,k).. r(k) - d(j) + t_d('0',j,k) + p(j) =l= M*(1-x_d('0',j,k));
 121   
 122   
 123  Model QCSP /all/;
 124  solve QCSP using MINLP min objFunc;
 125   
 126   
 127   
 128   
 129   
 130   
 131   


COMPILATION TIME     =        0.000 SECONDS      3 MB  50.4.0 c55df396 WEX-WEI


USER: GAMS Demo, for EULA and demo limitations see   G250531/0001CB-GEN
      https://www.gams.com/latest/docs/UG%5FLicense.html         DC0000


**** FILE SUMMARY

Input      C:\Users\taghi\Projects\QCSP\QCSP_Model.gms
Output     C:\Users\taghi\Projects\QCSP\QCSP_Model.lst
XSave      C:\Users\taghi\Projects\QCSP\QCSP_Model.g0?

**** WARNING - COMPILER OPTIONS ARE NON DEFAULT     ONEMPTY
